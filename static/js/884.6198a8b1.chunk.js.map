{"version":3,"file":"static/js/884.6198a8b1.chunk.js","mappings":"yNA0DA,UApDqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAc,qBADHC,EAAAA,EAAAA,MACeC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAQ/C,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaZ,GACVa,MAAK,SAAAC,GAAI,OAAIV,EAAaU,EAAjB,IACTC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,QAAnB,GACf,GAAE,CAAChB,IAECG,GAGH,2BACGE,GAASY,EAAAA,GAAAA,MAAYZ,IACtB,SAAC,KAAD,CAAMa,GAAIX,EAAV,gCACA,4BACE,gBACEY,IAAG,6CAAwChB,EAAUiB,aACrDC,IAAKlB,EAAUmB,MACfC,MAAM,SAER,4BACE,wBAAKpB,EAAUmB,SACf,yCAA0C,GAAzBnB,EAAUqB,cAAmBC,QAAQ,GAAtD,SACA,sCACA,uBAAItB,EAAUuB,YACd,sCACA,uBAAIvB,EAAUwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAGvD,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAc,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,SAjCiB,IAqCxB,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from '../API';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const goBackLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(data => setMovieById(data))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  if (!movieById) return null;\n\n  return (\n    <div>\n      {error && toast.error(error)}\n      <Link to={goBackLinkHref}>Go back to movies</Link>\n      <div>\n        <img\n          src={`https://www.themoviedb.org/t/p/w500${movieById.poster_path}`}\n          alt={movieById.title}\n          width=\"300\"\n        />\n        <div>\n          <h1>{movieById.title}</h1>\n          <p>User Score: {(movieById.vote_average * 10).toFixed(0)} %</p>\n          <h2>Overview</h2>\n          <p>{movieById.overview}</p>\n          <h3>Overview</h3>\n          <p>{movieById.genres.map(genre => genre.name).join(', ')}</p>\n        </div>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movieById","setMovieById","error","setError","goBackLinkHref","useLocation","state","from","useEffect","getMovieById","then","data","catch","message","toast","to","src","poster_path","alt","title","width","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}